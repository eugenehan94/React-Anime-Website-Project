{"version":3,"sources":["__helper/constants.js","Redux/Actions/mobileNavbarAction.js","Components/MobileNavbar.js","Components/Navbar.js","Images/demonSlayerHeroImage.jpg","Components/AnimeHero.js","Redux/Actions/animeActions.js","Components/AnimeDropdownBox.js","Components/Loader.js","Images/animeCryingImage.png","Components/AnimeContent.js","Components/ScrollToTop.js","Components/Footer.js","Pages/Home.js","Redux/Actions/fetchData.js","Redux/Actions/searchAction.js","Components/SwitchTo.js","Components/SearchBar.js","Components/SearchContent.js","Pages/Search.js","Images/soloLevelingHeroImage.jpg","Components/MangaHero.js","Components/MangaDropdownBox.js","Redux/Actions/mangaActions.js","Components/MangaContent.js","Pages/Manga.js","Pages/Error.js","App.js","reportWebVitals.js","theme.js","Redux/Reducers/defaultState.js","Redux/Reducers/index.js","Redux/Reducers/fetchDataReducer.js","Redux/Reducers/animeReducer.js","Redux/Reducers/mangaReducer.js","Redux/Reducers/searchReducer.js","Redux/Reducers/mobileNavbarReducer.js","Redux/store.js","index.js"],"names":["SELECTED_CATEGORY","SELECTED_CATEGORY_LIST","TOGGLE_ANIME_API_ERROR","TOGGLE_ANIME_IS_LOADING","SEARCH_QUERY","QUERY_RESULTS_UPDATE","QUERY_TYPE_SELECTION","MANGA_SELECTED_CATEGORY","SELECTED_CATEGORY_LIST_MANGA","TOGGLE_MANGA_IS_LOADING","SET_MOBILE_NAVBAR_STATE","SEARCH_LOADER","SEARCH_PENDING","SET_SEARCH_ERROR_MESSAGE","setMobileNavbarState","input","type","payload","MobileNavbar","data","useSelector","state","dispatch","useDispatch","mobileNavbarState","mobileNavbarReducer","handleDrawerToggle","drawer","Box","sx","padding","height","width","display","justifyContent","alignItems","Typography","variant","fontSize","color","cursor","onClick","Divider","marginTop","marginBottom","backgroundColor","paddingLeft","paddingRight","paddingTop","flexGrow","margin","marginLeft","letterSpacing","to","style","position","bottom","align","window","open","textDecoration","component","Drawer","onClose","ModalProps","keepMounted","xs","sm","boxSizing","Navbar","mobileView","useMediaQuery","theme","breakpoints","up","AppBar","elevation","Toolbar","className","Grid","container","item","Hero","src","demonSlayerHeroImage","alt","toggleAnimeApiError","AnimeDropdownBox","animeSelectedCategory","animeReducer","FormControl","Select","labelId","id","value","onChange","event","selected","target","borderBottomColor","MenuItem","paddingBottom","lg","data-testid","Loader","props","CircularProgress","disableShrink","AnimeContent","animeList","animeIsLoading","animeApiError","useEffect","a","axios","get","response","list","fetchChoice","animeCryingImage","maxWidth","spacing","map","xl","md","Card","CardActionArea","href","url","rel","CardMedia","image","images","jpg","image_url","title","objectFit","gutterBottom","toUpperCase","rank","score","aired","string","episodes","mal_id","ScrollToTop","useState","isVisible","setIsVisible","toggleVisiblity","scrollY","addEventListener","removeEventListener","right","zIndex","Button","scrollTo","top","behavior","size","fontWeight","Footer","borderTop","Link","underline","Home","AnimeHero","queryTypeSelection","selection","searchLoader","setSearchPending","setSearchErrorMessage","SwitchTo","React","checked","setChecked","Stack","direction","Switch","SearchBar","typeSelection","fetchDataReducer","searchReducer","searchPending","searchErrorMessage","inputRef","useRef","fetchQuery","inputs","p","flexDirection","onSubmit","preventDefault","current","TextField","defaultValue","InputProps","startAdornment","InputAdornment","endAdornment","startIcon","thickness","disabled","disableRipple","borderColor","SearchContent","queryResults","result","i","volumes","chapters","Search","searchComponentIsLoading","MangaHero","soloLevelingImage","MangaDropdownBox","mangaSelectedCategory","mangaReducer","MangaContent","mangaList","mangaIsLoading","console","log","Manga","Error","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","palette","background","default","text","primary","secondary","main","typography","fontFamily","join","defaultState","loading","searchedData","reducers","combineReducers","action","produce","draftState","query","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.a33baa8a.chunk.js","sourcesContent":["// for animeActions & animeReducer\r\nexport const SELECTED_CATEGORY = \"SELECTED_CATEGORY\";\r\nexport const SELECTED_CATEGORY_LIST = \"SELECTED_CATEGORY_LIST\";\r\nexport const TOGGLE_ANIME_API_ERROR = \"TOGGLE_ANIME_API_ERROR\";\r\nexport const TOGGLE_ANIME_IS_LOADING = \"TOGGLE_ANIME_IS_LOADING\";\r\n// for fetchData & fetchDataReducer\r\nexport const SEARCH_QUERY = \"SEARCH_QUERY\";\r\nexport const QUERY_RESULTS_UPDATE = \"QUERY_RESULTS_UPDATE\";\r\nexport const QUERY_TYPE_SELECTION = \"QUERY_TYPE_SELECTION\";\r\n\r\n// for mangaActions & mangaReducer\r\nexport const MANGA_SELECTED_CATEGORY = \"MANGA_SELECTED_CATEGORY\";\r\nexport const SELECTED_CATEGORY_LIST_MANGA = \"SELECTED_CATEGORY_LIST\";\r\nexport const TOGGLE_MANGA_IS_LOADING = \"TOGGLE_MANGA_IS_LOADING\";\r\n\r\n// for the mobileNavbarAction & mobileNavbarReducer\r\nexport const SET_MOBILE_NAVBAR_STATE = \"SET_MOBILE_NAVBAR_STATE\";\r\n\r\n// for the searchAction & searchReducer\r\nexport const SEARCH_LOADER = \"SEARCH_LOADER\";\r\nexport const SEARCH_PENDING = \"SEARCH_PENDING\";\r\nexport const SET_SEARCH_ERROR_MESSAGE = \"SET_SEARCH_ERROR_MESSAGE\";\r\n\r\n// for AnimeContent.js\r\nexport const ANIME_CATEGORY_TITLE = \"Anime - top \";\r\n\r\n// for MangaContent.js\r\nexport const MANGA_CATEGORY_TITLE = \"Top\";\r\n\r\n// for SearchBar.js\r\nexport const SEARCH_TITLE = \"Search Anime/ Manga\";","import { SET_MOBILE_NAVBAR_STATE } from \"../../__helper/constants\";\r\n\r\nexport const setMobileNavbarState = (input) => {\r\n    return {\r\n        type: SET_MOBILE_NAVBAR_STATE,\r\n        payload: input\r\n    }\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box, Drawer, Typography, Divider } from \"@mui/material\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport MenuBookIcon from \"@mui/icons-material/MenuBook\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setMobileNavbarState } from \"../Redux/Actions/mobileNavbarAction\";\r\n\r\nconst MobileNavbar = () => {\r\n  const data = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const { mobileNavbarState } = data.mobileNavbarReducer;\r\n\r\n  const handleDrawerToggle = () => {\r\n    dispatch(setMobileNavbarState(false));\r\n  };\r\n\r\n  const drawer = (\r\n    <Box sx={{ padding: \"1rem\", height: \"100%\", width: \"100%\" }}>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\">AniMan</Typography>\r\n        <CloseIcon\r\n          fontSize=\"large\"\r\n          sx={{ color: \"red\", \"&:hover\": { cursor: \"pointer\" } }}\r\n          onClick={() => {\r\n            handleDrawerToggle();\r\n          }}\r\n        />\r\n      </Box>\r\n      <Divider\r\n        sx={{\r\n          marginTop: \"10px\",\r\n          marginBottom: \"10px\",\r\n          backgroundColor: \"rgba(255,255,255,0.2)\",\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{ paddingLeft: \"10px\", paddingRight: \"10px\", paddingTop: \"10px\" }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            flexGrow: 1,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            marginBottom: \"20px\",\r\n          }}\r\n        >\r\n          <HomeIcon fontSize=\"large\" sx={{ margin: 0, padding: 0 }} />\r\n          <Typography\r\n            variant=\"h4\"\r\n            sx={{\r\n              padding: 0,\r\n              marginLeft: \"15px\",\r\n              letterSpacing: \"2px\",\r\n            }}\r\n          >\r\n            <Link\r\n              to=\"/\"\r\n              style={{ color: \"white\" }}\r\n              onClick={() => handleDrawerToggle()}\r\n            >\r\n              Home\r\n            </Link>\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            flexGrow: 1,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            marginBottom: \"20px\",\r\n          }}\r\n        >\r\n          <MenuBookIcon fontSize=\"large\" sx={{ margin: 0, padding: 0 }} />\r\n          <Typography\r\n            variant=\"h4\"\r\n            sx={{\r\n              padding: 0,\r\n              marginLeft: \"15px\",\r\n              letterSpacing: \"2px\",\r\n            }}\r\n          >\r\n            <Link\r\n              to=\"/manga\"\r\n              style={{ color: \"white\" }}\r\n              onClick={() => handleDrawerToggle()}\r\n            >\r\n              Manga\r\n            </Link>\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            flexGrow: 1,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            marginBottom: \"20px\",\r\n          }}\r\n        >\r\n          <SearchIcon fontSize=\"large\" sx={{ margin: 0, padding: 0 }} />\r\n          <Typography\r\n            variant=\"h4\"\r\n            sx={{\r\n              padding: 0,\r\n              marginLeft: \"15px\",\r\n              letterSpacing: \"2px\",\r\n            }}\r\n          >\r\n            <Link\r\n              to=\"/search\"\r\n              style={{ color: \"white\" }}\r\n              onClick={() => handleDrawerToggle()}\r\n            >\r\n              Search\r\n            </Link>\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box sx={{ position: \"fixed\", bottom: \"30px\", width: \"90%\" }}>\r\n        <Divider\r\n          variant=\"fullWidth\"\r\n          sx={{\r\n            marginBottom: \"10px\",\r\n            backgroundColor: \"rgba(255,255,255,0.2)\",\r\n          }}\r\n        />\r\n        <Typography align=\"center\">AniMan Developed by</Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          onClick={() => {\r\n            window.open(\r\n              \"https://eugenehan.netlify.app/\",\r\n              \"_blank\",\r\n              \"noopener,noreferrer\"\r\n            );\r\n          }}\r\n          sx={{ \"&:hover\": { cursor: \"pointer\" }, textDecoration: \"underline\" }}\r\n        >\r\n          Eugene Han\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box component=\"nav\">\r\n      <Drawer\r\n        variant=\"persistent\"\r\n        open={mobileNavbarState}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true, // Better open performance on mobile.\r\n        }}\r\n        sx={{\r\n          display: { xs: \"block\", sm: \"none\" },\r\n          \"& .MuiDrawer-paper\": {\r\n            boxSizing: \"border-box\",\r\n            width: \"100%\",\r\n            backgroundColor: \"#1a202c\",\r\n          },\r\n        }}\r\n      >\r\n        {drawer}\r\n      </Drawer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MobileNavbar;\r\n","import React from \"react\";\r\nimport { AppBar, Box, Grid, Toolbar, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setMobileNavbarState } from \"../Redux/Actions/mobileNavbarAction\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport MobileNavbar from \"./MobileNavbar\";\r\n\r\nconst Navbar = () => {\r\n  const data = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const mobileView = useMediaQuery((theme) => theme.breakpoints.up(\"sm\"));\r\n  const { mobileNavbarState } = data.mobileNavbarReducer;\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\" elevation={0}>\r\n        <Toolbar>\r\n          {mobileView ? (\r\n            <>\r\n              <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n                <Link to=\"/\" className=\"home-link\">\r\n                  AniMan\r\n                </Link>\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{\r\n                  paddingRight: { xs: 0, sm: 3 },\r\n                  flexGrow: { xs: 1, sm: 0 },\r\n                }}\r\n              >\r\n                <Link to=\"/manga\" style={{ color: \"white\" }}>\r\n                  Manga\r\n                </Link>\r\n              </Typography>\r\n              <Typography variant=\"h6\">\r\n                <Link to=\"/search\" style={{ color: \"white\" }}>\r\n                  Search\r\n                </Link>\r\n              </Typography>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Grid\r\n                container\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    sx={{ flexGrow: 1, color: \"#FF0000\" }}\r\n                  >\r\n                    AniMan\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <MenuIcon\r\n                    sx={{\r\n                      margin: 0,\r\n                      padding: 0,\r\n                      \"&:hover\": { cursor: \"pointer\" },\r\n                    }}\r\n                    onClick={() => {\r\n                      dispatch(setMobileNavbarState(!mobileNavbarState));\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <MobileNavbar />\r\n            </>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/demonSlayerHeroImage.529ec057.jpg\";","import React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport demonSlayerHeroImage from \"../Images/demonSlayerHeroImage.jpg\";\r\n\r\nconst Hero = () => {\r\n  return (\r\n    <Box>\r\n      <img\r\n        src={demonSlayerHeroImage}\r\n        alt=\"demon slayer poster\"\r\n        style={{ width: \"100%\" }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import {\r\n  SELECTED_CATEGORY,\r\n  SELECTED_CATEGORY_LIST,\r\n  TOGGLE_ANIME_API_ERROR,\r\n  TOGGLE_ANIME_IS_LOADING,\r\n} from \"../../__helper/constants\";\r\n\r\nexport const selectedDropdown = (selected) => {\r\n  return {\r\n    type: SELECTED_CATEGORY,\r\n    payload: selected,\r\n  };\r\n};\r\n\r\nexport const selectedList = (list) => {\r\n  return {\r\n    type: SELECTED_CATEGORY_LIST,\r\n    payload: list,\r\n  };\r\n};\r\nexport const toggleAnimeIsLoading = (state) => {\r\n  return {\r\n    type: TOGGLE_ANIME_IS_LOADING,\r\n    payload: state,\r\n  };\r\n};\r\nexport const toggleAnimeApiError = (state) => {\r\n  return {\r\n    type: TOGGLE_ANIME_API_ERROR,\r\n    payload: state,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Box, FormControl, Select, MenuItem, Typography } from \"@mui/material\";\r\nimport {\r\n  selectedDropdown,\r\n  toggleAnimeIsLoading,\r\n} from \"../Redux/Actions/animeActions\";\r\nimport { ANIME_CATEGORY_TITLE } from \"../__helper/constants\";\r\nconst AnimeDropdownBox = () => {\r\n  const data = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const { animeSelectedCategory } = data.animeReducer;\r\n\r\n  const handleChange = (event) => {\r\n    dispatch(selectedDropdown(event.target.value));\r\n    dispatch(toggleAnimeIsLoading(true));\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: { xs: \"center\", sm: \"flex-start\" },\r\n        }}\r\n      >\r\n        <Box>\r\n          <FormControl variant=\"filled\">\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={animeSelectedCategory}\r\n              // label=\"Age\"\r\n              onChange={handleChange}\r\n              sx={{\r\n                \"&:before\": {\r\n                  borderBottomColor: \"#ffffff\",\r\n                },\r\n                \"&:after\": {\r\n                  borderBottomColor: \"#ffffff\",\r\n                },\r\n                \"& .MuiSvgIcon-root\": {\r\n                  color: \"#ffffff\",\r\n                },\r\n                fontSize: \"1.5rem\",\r\n              }}\r\n            >\r\n              <MenuItem\r\n                value=\"airing\"\r\n                sx={{ color: \"text.secondary\", fontSize: \"1.2rem\" }}\r\n              >\r\n                Top Airing\r\n              </MenuItem>\r\n              <MenuItem\r\n                value=\"movie\"\r\n                sx={{ color: \"text.secondary\", fontSize: \"1.2rem\" }}\r\n              >\r\n                Top Movies\r\n              </MenuItem>\r\n              <MenuItem\r\n                value=\"tv\"\r\n                sx={{ color: \"text.secondary\", fontSize: \"1.2rem\" }}\r\n              >\r\n                Top TVs\r\n              </MenuItem>\r\n              <MenuItem\r\n                value=\"upcoming\"\r\n                sx={{ color: \"text.secondary\", fontSize: \"1.2rem\" }}\r\n              >\r\n                Top Upcoming\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n      </Box>\r\n      <Typography\r\n        variant=\"h3\"\r\n        align=\"center\"\r\n        sx={{ paddingBottom: \"2rem\", paddingTop: { xs: \"1.5rem\", lg: \"0rem\" } }}\r\n        data-testid=\"animeContentHeading\"\r\n      >\r\n        {ANIME_CATEGORY_TITLE} {animeSelectedCategory}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AnimeDropdownBox;\r\n","import * as React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nconst Loader = (props) => {\r\n  return (\r\n    <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <CircularProgress disableShrink sx={{ color: \"red\" }} {...props} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export default __webpack_public_path__ + \"static/media/animeCryingImage.abd5b2af.png\";","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport StarRateIcon from \"@mui/icons-material/StarRate\";\r\nimport {\r\n  selectedList,\r\n  toggleAnimeApiError,\r\n} from \"../Redux/Actions/animeActions\";\r\nimport Loader from \"./Loader\";\r\nimport animeCryingImage from \"../Images/animeCryingImage.png\";\r\nimport axios from \"axios\";\r\n\r\nconst AnimeContent = () => {\r\n  const data = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const { animeSelectedCategory, animeList, animeIsLoading, animeApiError } =\r\n    data.animeReducer;\r\n\r\n  useEffect(() => {\r\n    // Link to handling errors in axios async/await setup\r\n    // https://rapidapi.com/guides/axios-async-await\r\n    const fetchChoice = async () => {\r\n      try {\r\n        let response;\r\n        // New version of API (V4) separated categories into specific API calls base on query parameters.\r\n        if (\r\n          animeSelectedCategory === \"tv\" ||\r\n          animeSelectedCategory === \"movie\"\r\n        ) {\r\n          response = await axios.get(\r\n            `https://api.jikan.moe/v4/top/anime?type=${animeSelectedCategory}`\r\n          );\r\n        }\r\n        if (\r\n          animeSelectedCategory === \"airing\" ||\r\n          animeSelectedCategory === \"upcoming\"\r\n        ) {\r\n          response = await axios.get(\r\n            `https://api.jikan.moe/v4/top/anime?filter=${animeSelectedCategory}`\r\n          );\r\n        }\r\n        // const response = await axios.get(\r\n        //   `https://api.jikan.moe/v4/top/anime`\r\n        // );\r\n        dispatch(toggleAnimeApiError(false));\r\n        dispatch(selectedList(response.data.data));\r\n      } catch (errors) {\r\n        dispatch(toggleAnimeApiError(true));\r\n      }\r\n    };\r\n    fetchChoice();\r\n  }, [animeSelectedCategory, dispatch]);\r\n\r\n  if (animeIsLoading) {\r\n    return (\r\n      <Box sx={{ paddingTop: \"1rem\" }}>\r\n        <Loader />\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <Box>\r\n      {animeApiError ? (\r\n        <>\r\n          <Typography align=\"center\" variant=\"h5\">\r\n            Sorry something went wrong\r\n          </Typography>\r\n          <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <img\r\n              src={animeCryingImage}\r\n              alt=\"Anime Character Crying\"\r\n              style={{ maxWidth: \"100%\", height: \"auto\" }}\r\n            />\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Grid container spacing={6}>\r\n          {animeList.map((item) => {\r\n            return (\r\n              <Grid item xl={2} lg={3} md={4} sm={6} xs={12} key={item.mal_id}>\r\n                <Card\r\n                  sx={{\r\n                    backgroundColor: \"#1a202c\",\r\n                    height: \"100%\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  <CardActionArea\r\n                    href={item.url}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    <div className=\"movie\">\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        // image={item.image_url}\r\n                        image={item.images.jpg.image_url}\r\n                        alt={item.title}\r\n                        height=\"325\"\r\n                        sx={{\r\n                          position: \"relative\",\r\n                          objectFit: \"fill\",\r\n                        }}\r\n                      />\r\n                      <div className=\"movie-info\">\r\n                        <Typography gutterBottom>\r\n                          {item.title.toUpperCase()}\r\n                        </Typography>\r\n                        <Typography>Rank: {item.rank}</Typography>\r\n                        <Typography gutterBottom>\r\n                          Score:{\" \"}\r\n                          {item.score === 0 ? (\r\n                            \" N/A\"\r\n                          ) : (\r\n                            <>\r\n                              {item.score}/10 <StarRateIcon fontSize=\"small\" />\r\n                            </>\r\n                          )}\r\n                        </Typography>\r\n                        {item.aired && (\r\n                          <Typography>\r\n                            Aired Date: {item.aired.string}\r\n                          </Typography>\r\n                        )}\r\n                        <Typography>\r\n                          Episodes:{\" \"}\r\n                          {item.episodes === null ? (\r\n                            \" Unknown\"\r\n                          ) : (\r\n                            <>{item.episodes}</>\r\n                          )}\r\n                        </Typography>\r\n                      </div>\r\n                    </div>\r\n                  </CardActionArea>\r\n                </Card>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AnimeContent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport KeyboardDoubleArrowUpIcon from \"@mui/icons-material/KeyboardDoubleArrowUp\";\r\nconst ScrollToTop = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const toggleVisiblity = () => {\r\n    if (window.scrollY > 300) {\r\n      setIsVisible(true);\r\n    } else {\r\n      setIsVisible(false);\r\n    }\r\n  };\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", toggleVisiblity);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", toggleVisiblity);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ position: \"fixed\", bottom: 10, right: 10, zIndex: \"999\" }}>\r\n      {isVisible && (\r\n        <Button\r\n          onClick={scrollToTop}\r\n          variant=\"contained\"\r\n          sx={{\r\n            backgroundColor: \"#FF0000\",\r\n            color: \"black\",\r\n            \"&:hover\": { backgroundColor: \"#ff2323\" },\r\n          }}\r\n          size=\"small\"\r\n        >\r\n          <KeyboardDoubleArrowUpIcon\r\n            sx={{ fontSize: \"1.5rem\", fontWeight: \"bold\" }}\r\n          />\r\n        </Button>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React from \"react\";\r\nimport { Box, Typography, Link } from \"@mui/material\";\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: { xs: \"7.5rem\", md: \"5rem\" },\r\n        paddingTop: { xs: \"2rem\", sm: \"1.5rem\" },\r\n        paddingBottom: { xs: \"2rem\" },\r\n        borderTop: \"1px solid rgba(0, 0, 0, 0.2)\",\r\n      }}\r\n    >\r\n      <Typography align=\"center\">\r\n        Developed by{\" \"}\r\n        <Link\r\n          href=\"https://eugenehan.netlify.app/\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          color=\"text.primary\"\r\n          underline=\"hover\"\r\n        >\r\n          Eugene Han\r\n        </Link>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport Navbar from \"../Components/Navbar\";\r\nimport AnimeHero from \"../Components/AnimeHero\";\r\nimport AnimeDropdownBox from \"../Components/AnimeDropdownBox\";\r\nimport AnimeContent from \"../Components/AnimeContent\";\r\nimport ScrollToTop from \"../Components/ScrollToTop\";\r\nimport Footer from \"../Components/Footer\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Home = () => {\r\n  const data = useSelector((state) => state);\r\n  const { animeIsLoading } = data.animeReducer;\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <AnimeHero />\r\n      <Box\r\n        sx={{\r\n          paddingLeft: { xs: \"1rem\", sm: \"4rem\" },\r\n          paddingRight: { xs: \"1rem\", sm: \"4rem\" },\r\n          paddingTop: \"2rem\",\r\n          paddingBottom: \"2rem\",\r\n        }}\r\n      >\r\n        <AnimeDropdownBox />\r\n        <AnimeContent />\r\n      </Box>\r\n      {animeIsLoading ? <></> : <Footer />}\r\n      <ScrollToTop />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import {\r\n  SEARCH_QUERY,\r\n  QUERY_RESULTS_UPDATE,\r\n  QUERY_TYPE_SELECTION,\r\n} from \"../../__helper/constants\";\r\n\r\nexport const searchQuery = (inputs) => {\r\n  return {\r\n    type: SEARCH_QUERY,\r\n    payload: inputs\r\n  }\r\n}\r\n\r\nexport const queryResultsUpdate = (inputs) => {\r\n  return {\r\n    type: QUERY_RESULTS_UPDATE,\r\n    payload: inputs\r\n  }\r\n}\r\n\r\nexport const queryTypeSelection = (selection) => {\r\n  return {\r\n    type: QUERY_TYPE_SELECTION,\r\n    payload: selection\r\n  }\r\n}","/*This actions is for the Search.js*/\r\n\r\nimport {\r\n  SEARCH_LOADER,\r\n  SEARCH_PENDING,\r\n  SET_SEARCH_ERROR_MESSAGE,\r\n} from \"../../__helper/constants\";\r\n// This is for loading the Footer in the Search.js\r\n// after the anime/manga loaded\r\nexport const searchLoader = (input) => {\r\n  return {\r\n    type: SEARCH_LOADER,\r\n    payload: input,\r\n  };\r\n};\r\n\r\nexport const setSearchPending = (input) => {\r\n  return {\r\n    type: SEARCH_PENDING,\r\n    payload: input,\r\n  };\r\n};\r\n\r\nexport const setSearchErrorMessage = (input) => {\r\n  return {\r\n    type: SET_SEARCH_ERROR_MESSAGE,\r\n    payload: input\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Box, Switch, Stack, Typography } from \"@mui/material/\";\r\nimport {queryTypeSelection} from \"../Redux/Actions/fetchData\"\r\nconst SwitchTo = () => {\r\n  // const data = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  // True is \"anime\" and False is \"manga\"\r\n  // Kept useState because it is used in Switch and there is a propType of boolean\r\n  const [checked, setChecked] = React.useState(false);\r\n  const handleChange = (event) => {\r\n    if (event.target.checked === false) {\r\n      dispatch(queryTypeSelection(\"anime\"));\r\n      setChecked(event.target.checked);\r\n    }\r\n    if (event.target.checked === true) {\r\n      dispatch(queryTypeSelection(\"manga\"));\r\n      setChecked(event.target.checked);\r\n    }\r\n  };\r\n  return (\r\n    <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n        <Typography variant=\"h6\">Anime</Typography>\r\n        <Switch\r\n          checked={checked}\r\n          onChange={handleChange}\r\n          sx={{\r\n            \"& .MuiSwitch-thumb\": {\r\n              backgroundColor: \"#FF0000\",\r\n            },\r\n            \"& .MuiSwitch-switchBase.Mui-checked\": {\r\n              color: \"#ffffff\",\r\n            },\r\n            \"& .MuiSwitch-track\": {\r\n              backgroundColor: \"#9f9f9f\",\r\n            },\r\n            \"& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track\": {\r\n              backgroundColor: \"#9f9f9f\",\r\n            },\r\n          }}\r\n        />\r\n        <Typography variant=\"h6\">Manga</Typography>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SwitchTo;\r\n","import React from \"react\";\r\nimport {SEARCH_TITLE} from \"../__helper/constants\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  InputAdornment,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { queryResultsUpdate } from \"../Redux/Actions/fetchData\";\r\n\r\nimport {\r\n  searchLoader,\r\n  setSearchPending,\r\n  setSearchErrorMessage,\r\n} from \"../Redux/Actions/searchAction\";\r\nimport Loader from \"../Components/Loader\";\r\nimport SwitchTo from \"../Components/SwitchTo\";\r\nimport axios from \"axios\";\r\nconst SearchBar = () => {\r\n  const data = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const { typeSelection } = data.fetchDataReducer;\r\n  const { searchPending, searchErrorMessage } = data.searchReducer;\r\n\r\n  const inputRef = React.useRef(\"Naruto\");\r\n\r\n  const fetchQuery = async (input) => {\r\n    dispatch(setSearchPending(true));\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.jikan.moe/v4/${typeSelection}?q=${input}&limit=50`\r\n      );\r\n      dispatch(setSearchErrorMessage(\"\"));\r\n      dispatch(queryResultsUpdate(response.data.data));\r\n      dispatch(searchLoader(false));\r\n    } catch (error) {\r\n      dispatch(\r\n        setSearchErrorMessage(\r\n          \"Oops, something went wrong. Please correct your search or try again later.\"\r\n        )\r\n      );\r\n      dispatch(setSearchPending(false));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    fetchQuery(inputRef.current.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h3\" align=\"center\" sx={{ paddingTop: \"1rem\" }}>\r\n        {SEARCH_TITLE}\r\n      </Typography>\r\n      <SwitchTo />\r\n      <Box\r\n        sx={{\r\n          p: \"1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            type=\"text\"\r\n            defaultValue=\"Naruto\"\r\n            inputRef={inputRef}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Typography>🔎</Typography>\r\n                </InputAdornment>\r\n              ),\r\n              endAdornment: (\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"text\"\r\n                  startIcon={\r\n                    searchPending ? (\r\n                      <Loader size=\"1.8rem\" thickness={7} />\r\n                    ) : (\r\n                      <></>\r\n                    )\r\n                  }\r\n                  disabled={searchPending}\r\n                  disableRipple\r\n                >\r\n                  <Typography sx={{ color: \"text.primary\" }}>Search</Typography>\r\n                </Button>\r\n              ),\r\n            }}\r\n            sx={{\r\n              \"& .MuiOutlinedInput-root\": {\r\n                \"& fieldset\": {\r\n                  borderColor: \"white\",\r\n                },\r\n                \"&:hover fieldset\": {\r\n                  borderColor: \"white\",\r\n                },\r\n                \"&.Mui-focused fieldset\": {\r\n                  borderColor: \"yellow\",\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </form>\r\n        {searchErrorMessage && (\r\n          <Typography sx={{ color: \"red\" }}>{searchErrorMessage}</Typography>\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport StarRateIcon from \"@mui/icons-material/StarRate\";\r\nconst SearchContent = () => {\r\n  const data = useSelector((state) => state);\r\n  const { queryResults } = data.fetchDataReducer;\r\n  return (\r\n    <Box>\r\n      <Grid container spacing={6}>\r\n        {queryResults.map((result, i) => {\r\n          return (\r\n            // key={i} because API of same Manga and Anime will give same key errors\r\n            <Grid item xl={2} lg={3} md={4} sm={6} xs={12} key={i}>\r\n              <Card\r\n                sx={{\r\n                  backgroundColor: \"#1a202c\",\r\n                  height: \"100%\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                <CardActionArea\r\n                  href={result.url}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <div className=\"movie\">\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      image={result.images.jpg.image_url}\r\n                      alt={result.title}\r\n                      height=\"325\"\r\n                      sx={{\r\n                        position: \"relative\",\r\n                        objectFit: \"fill\",\r\n                      }}\r\n                    />\r\n                    <div className=\"movie-info\">\r\n                      <Typography gutterBottom>\r\n                        {result.title.toUpperCase()}\r\n                      </Typography>\r\n                      <Typography>Type: {result.type}</Typography>\r\n                      <Typography gutterBottom>\r\n                        Score:\r\n                        {result.score === 0 ? (\r\n                          \" N/A\"\r\n                        ) : (\r\n                          <>\r\n                            {\" \"}\r\n                            {result.score}/10 <StarRateIcon fontSize=\"small\" />\r\n                          </>\r\n                        )}\r\n                      </Typography>\r\n                      <Typography>\r\n                        {result.volumes && <>Volume(s): {result.volumes}</>}\r\n                      </Typography>\r\n                      <Typography>\r\n                        {result.episodes && <>Episode(s): {result.episodes}</>}\r\n                        {result.chapters && <>Chapter(s): {result.chapters}</>}\r\n                      </Typography>\r\n                    </div>\r\n                  </div>\r\n                </CardActionArea>\r\n              </Card>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SearchContent;\r\n","import React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport Navbar from \"../Components/Navbar\";\r\nimport ScrollToTop from \"../Components/ScrollToTop\";\r\nimport SearchBar from \"../Components/SearchBar\";\r\nimport SearchContent from \"../Components/SearchContent\";\r\nimport Footer from \"../Components/Footer\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Search = () => {\r\n  const data = useSelector((state) => state);\r\n  const { searchComponentIsLoading } = data.searchReducer;\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <SearchBar />\r\n      {searchComponentIsLoading ? (\r\n        <></>\r\n      ) : (\r\n        <>\r\n          <Box\r\n            sx={{\r\n              paddingLeft: { xs: \"1rem\", sm: \"4rem\" },\r\n              paddingRight: { xs: \"1rem\", sm: \"4rem\" },\r\n              paddingTop: \"2rem\",\r\n              paddingBottom: \"2rem\",\r\n            }}\r\n          >\r\n            <SearchContent />\r\n          </Box>\r\n          <Footer />\r\n        </>\r\n      )}\r\n      <ScrollToTop />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","export default __webpack_public_path__ + \"static/media/soloLevelingHeroImage.f90eb293.jpg\";","import React from \"react\"\r\nimport { Box } from \"@mui/material\";\r\nimport soloLevelingImage from \"../Images/soloLevelingHeroImage.jpg\";\r\n\r\nconst MangaHero = () => {\r\n    return (\r\n        <Box>\r\n          <img\r\n            src={soloLevelingImage}\r\n            alt=\"solo leveling\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Box>\r\n    );\r\n}\r\nexport default MangaHero","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { MANGA_CATEGORY_TITLE } from \"../__helper/constants\";\r\nimport { Box, FormControl, Select, MenuItem, Typography } from \"@mui/material\";\r\nimport {\r\n  selectedDropdown,\r\n  toggleMangaIsLoading,\r\n} from \"../Redux/Actions/mangaActions\";\r\nconst MangaDropdownBox = () => {\r\n  const data = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const { mangaSelectedCategory } = data.mangaReducer;\r\n\r\n  const handleChange = (event) => {\r\n    dispatch(selectedDropdown(event.target.value));\r\n    dispatch(toggleMangaIsLoading(true));\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: { xs: \"center\", sm: \"flex-start\" },\r\n          }}\r\n        >\r\n          <FormControl variant=\"filled\">\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={mangaSelectedCategory}\r\n              onChange={handleChange}\r\n              sx={{\r\n                \"&:before\": {\r\n                  borderBottomColor: \"#ffffff\",\r\n                },\r\n                \"&:after\": {\r\n                  borderBottomColor: \"#ffffff\",\r\n                },\r\n                \"& .MuiSvgIcon-root\": {\r\n                  color: \"#ffffff\",\r\n                },\r\n                fontSize: \"1.5rem\",\r\n              }}\r\n            >\r\n              <MenuItem\r\n                value=\"manga\"\r\n                sx={{ color: \"text.secondary\", fontSize: \"1.2rem\" }}\r\n              >\r\n                Manga\r\n              </MenuItem>\r\n              <MenuItem\r\n                value=\"manhwa\"\r\n                sx={{ color: \"text.secondary\", fontSize: \"1.2rem\" }}\r\n              >\r\n                Manhwa\r\n              </MenuItem>\r\n              <MenuItem\r\n                value=\"manhua\"\r\n                sx={{ color: \"text.secondary\", fontSize: \"1.2rem\" }}\r\n              >\r\n                Manhua\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n      </Box>\r\n      <Typography variant=\"h3\" align=\"center\" sx={{ paddingBottom: \"2rem\" }}>\r\n        {MANGA_CATEGORY_TITLE} {mangaSelectedCategory}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MangaDropdownBox;\r\n","import { MANGA_SELECTED_CATEGORY, SELECTED_CATEGORY_LIST_MANGA, TOGGLE_MANGA_IS_LOADING } from \"../../__helper/constants\";\r\n\r\nexport const selectedDropdown = (selected) => {\r\n    return {\r\n        type: MANGA_SELECTED_CATEGORY,\r\n        payload: selected\r\n    }\r\n}\r\n\r\nexport const selectedList = (list) => {\r\n  return {\r\n    type: SELECTED_CATEGORY_LIST_MANGA,\r\n    payload: list,\r\n  };\r\n};\r\n\r\nexport const toggleMangaIsLoading = (state) => {\r\n  return {\r\n    type: TOGGLE_MANGA_IS_LOADING,\r\n    payload: state\r\n  }\r\n}","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport StarRateIcon from \"@mui/icons-material/StarRate\";\r\nimport { selectedList } from \"../Redux/Actions/mangaActions\";\r\nimport Loader from \"./Loader\";\r\n\r\nimport axios from \"axios\";\r\nconst MangaContent = () => {\r\n  const data = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const { mangaSelectedCategory, mangaList, mangaIsLoading } =\r\n    data.mangaReducer;\r\n\r\n  useEffect(() => {\r\n    const fetchChoice = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://api.jikan.moe/v4/top/manga?type=${mangaSelectedCategory}`\r\n        );\r\n        dispatch(selectedList(response.data.data));\r\n      } catch (errors) {\r\n        console.log(\"errors present: \", errors);\r\n      }\r\n    };\r\n    fetchChoice();\r\n  }, [mangaSelectedCategory, dispatch]);\r\n\r\n  if (mangaIsLoading) {\r\n    return <Loader/>;\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ p: \"1rem\" }}>\r\n      <Grid container spacing={6}>\r\n        {mangaList.map((item) => {\r\n          return (\r\n            <Grid item xl={2} lg={3} md={4} sm={6} xs={12} key={item.mal_id}>\r\n              <Card\r\n                sx={{\r\n                  backgroundColor: \"#1a202c\",\r\n                  height: \"100%\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                <CardActionArea\r\n                  href={item.url}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <div className=\"movie\">\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      // image={item.image_url}\r\n                      image={item.images.jpg.image_url}\r\n                      alt={item.title}\r\n                      height=\"325\"\r\n                      sx={{\r\n                        position: \"relative\",\r\n                        objectFit: \"fill\",\r\n                      }}\r\n                    />\r\n                    <div className=\"movie-info\">\r\n                      <Typography gutterBottom>\r\n                        {item.title.toUpperCase()}\r\n                      </Typography>\r\n                      <Typography>\r\n                        {item.rank && <>Rank: {item.rank}</>}\r\n                      </Typography>\r\n                      <Typography gutterBottom>\r\n                        {item.score && (\r\n                          <>\r\n                            Score: {item.score}/10{\" \"}\r\n                            <StarRateIcon fontSize=\"small\" />\r\n                          </>\r\n                        )}\r\n                      </Typography>\r\n                      {/* <Typography>\r\n                        {item.published.string && <>Published: {item.published.string}</>}\r\n                      </Typography> */}\r\n                      <Typography>\r\n                        {item.volumes && <>Volume(s): {item.volumes}</>}\r\n                      </Typography>\r\n                    </div>\r\n                  </div>\r\n                </CardActionArea>\r\n              </Card>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MangaContent;\r\n","import React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport Navbar from \"../Components/Navbar\";\r\nimport MangaHero from \"../Components/MangaHero\";\r\nimport MangaDropdownBox from \"../Components/MangaDropdownBox\";\r\nimport MangaContent from \"../Components/MangaContent\";\r\nimport ScrollToTop from \"../Components/ScrollToTop\";\r\nimport Footer from \"../Components/Footer\";\r\nconst Manga = () => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <MangaHero />\r\n      <Box\r\n        sx={{\r\n          paddingLeft: { xs: \"1rem\", sm: \"4rem\" },\r\n          paddingRight: { xs: \"1rem\", sm: \"4rem\" },\r\n          paddingTop: \"2rem\",\r\n          paddingBottom: \"2rem\",\r\n        }}\r\n      >\r\n        <MangaDropdownBox />\r\n        <MangaContent />\r\n      </Box>\r\n      <Footer />\r\n      <ScrollToTop />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Manga;\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport Navbar from \"../Components/Navbar\";\r\nimport animeCryingImage from \"../Images/animeCryingImage.png\";\r\nimport Footer from \"../Components/Footer\";\r\nconst Error = () => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Typography align=\"center\" variant=\"h1\">\r\n        404\r\n      </Typography>\r\n      <Typography align=\"center\" variant=\"h5\">\r\n        Sorry your page was not found\r\n      </Typography>\r\n      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <img\r\n          src={animeCryingImage}\r\n          alt=\"Anime Character Crying\"\r\n          style={{ maxWidth: \"100%\", height: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./Pages/Home\";\r\nimport Search from \"./Pages/Search\"\r\nimport Manga from \"./Pages/Manga\"\r\nimport Error from \"./Pages/Error\"\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/search\" element={<Search />} />\r\n        <Route path=\"/manga\" element={<Manga/>} />\r\n        <Route path=\"*\" element={<Error/>}/>\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createTheme } from \"@mui/material/styles\";\r\nconst theme = createTheme({\r\n  palette: {\r\n    background: {\r\n      default: \"#1a202c\",\r\n    },\r\n    text: {\r\n      primary: \"#ffffff\",\r\n      secondary: \"#000000\",\r\n    },\r\n    primary: {\r\n      main: \"#1a202c\",\r\n    },\r\n    secondary: {\r\n      main: \"#ffffff\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\"Roboto\"].join(\",\"),\r\n   \r\n  },\r\n});\r\n\r\nexport default theme;\r\n","// Initial states for all reducers\r\n\r\nexport const defaultState = {\r\n  // for animeReducer.js\r\n  animeSelectedCategory: \"airing\",\r\n  animeList: null,\r\n  animeIsLoading: true,\r\n  animeApiError: false,\r\n  // for fetchDataReducer\r\n  loading: true,\r\n  queryResults: [],\r\n  typeSelection: \"anime\",\r\n  // for mangaReducer.js\r\n  mangaSelectedCategory: \"manga\",\r\n  mangaList: null,\r\n  mangaIsLoading: true,\r\n  // for mobileNavbarReducer.js\r\n  mobileNavbarState: false,\r\n  // for searchReducer.js\r\n  searchComponentIsLoading: true,\r\n  searchedData: [],\r\n  searchPending: false,\r\n  searchErrorMessage: \"\"\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { fetchDataReducer } from \"./fetchDataReducer\";\r\nimport { animeReducer } from \"./animeReducer\";\r\nimport { mangaReducer } from \"./mangaReducer\";\r\nimport { searchReducer } from \"./searchReducer\";\r\nimport { mobileNavbarReducer } from \"./mobileNavbarReducer\";\r\nconst reducers = combineReducers({\r\n  fetchDataReducer,\r\n  animeReducer,\r\n  mangaReducer,\r\n  searchReducer,\r\n  mobileNavbarReducer\r\n});\r\n\r\nexport default reducers;\r\n","import produce from \"immer\";\r\nimport {\r\n  SEARCH_QUERY,\r\n  QUERY_RESULTS_UPDATE,\r\n  QUERY_TYPE_SELECTION,\r\n} from \"../../__helper/constants\";\r\nimport { defaultState } from \"./defaultState\";\r\n\r\nexport const fetchDataReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // TODO: See whether we can remove this case\r\n    case SEARCH_QUERY:\r\n      return produce(state, (draftState) => {\r\n        draftState.query = action.payload;\r\n      });\r\n    case QUERY_RESULTS_UPDATE:\r\n      return produce(state, (draftState) => {\r\n        draftState.queryResults = action.payload;\r\n      });\r\n    case QUERY_TYPE_SELECTION:\r\n      return produce(state, (draftState) => {\r\n        draftState.typeSelection = action.payload;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import produce from \"immer\";\r\nimport {\r\n  SELECTED_CATEGORY,\r\n  SELECTED_CATEGORY_LIST,\r\n  TOGGLE_ANIME_API_ERROR,\r\n  TOGGLE_ANIME_IS_LOADING\r\n} from \"../../__helper/constants\";\r\nimport { defaultState } from \"./defaultState\";\r\n\r\nexport const animeReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case SELECTED_CATEGORY:\r\n      return produce(state, (draftState) => {\r\n        draftState.animeSelectedCategory = action.payload;\r\n      });\r\n    case SELECTED_CATEGORY_LIST:\r\n      return produce(state, (draftState) => {\r\n        draftState.animeList = action.payload;\r\n        draftState.animeIsLoading = false;\r\n      });\r\n    case TOGGLE_ANIME_IS_LOADING:\r\n      return produce(state, (draftState) => {\r\n        draftState.animeIsLoading = action.payload;\r\n      })\r\n    case TOGGLE_ANIME_API_ERROR:\r\n      return produce(state, (draftState) => {\r\n        draftState.animeApiError = action.payload;\r\n      })  \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import produce from \"immer\";\r\nimport {\r\n  MANGA_SELECTED_CATEGORY,\r\n  SELECTED_CATEGORY_LIST_MANGA,\r\n  TOGGLE_MANGA_IS_LOADING\r\n} from \"../../__helper/constants\";\r\nimport { defaultState } from \"./defaultState\";\r\n\r\nexport const mangaReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case MANGA_SELECTED_CATEGORY:\r\n      return produce(state, (draftState) => {\r\n        draftState.mangaSelectedCategory = action.payload;\r\n      });\r\n    case SELECTED_CATEGORY_LIST_MANGA:\r\n      return produce(state, (draftState) => {\r\n        draftState.mangaList = action.payload;\r\n        draftState.mangaIsLoading = false;\r\n      });\r\n    case TOGGLE_MANGA_IS_LOADING:\r\n      return produce(state, (draftState) => {\r\n        draftState.mangaIsLoading = action.payload;\r\n      })\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/*This actions is for the Search.js*/\r\nimport produce from \"immer\";\r\nimport {\r\n  SEARCH_LOADER,\r\n  SEARCH_PENDING,\r\n  SET_SEARCH_ERROR_MESSAGE,\r\n} from \"../../__helper/constants\";\r\nimport { defaultState } from \"./defaultState\";\r\n\r\nexport const searchReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_LOADER:\r\n      return produce(state, (draftState) => {\r\n        draftState.searchComponentIsLoading = action.payload;\r\n        draftState.searchPending = false;\r\n      });\r\n    case SEARCH_PENDING:\r\n      return produce(state, (draftState) => {\r\n        draftState.searchPending = action.payload;\r\n      });\r\n    case SET_SEARCH_ERROR_MESSAGE:\r\n      return produce(state, (draftState) => {\r\n        draftState.searchErrorMessage = action.payload;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import produce from \"immer\";\r\nimport { SET_MOBILE_NAVBAR_STATE } from \"../../__helper/constants\";\r\nimport { defaultState } from \"./defaultState\";\r\n\r\nexport const mobileNavbarReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case SET_MOBILE_NAVBAR_STATE:\r\n      return produce(state, (draftState) => {\r\n        draftState.mobileNavbarState = action.payload;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport reducers from \"./Reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { CssBaseline } from \"@mui/material/\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\nimport theme from \"./theme\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./Redux/store\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Provider store={store}>\r\n          <App />\r\n        </Provider>\r\n      </ThemeProvider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}